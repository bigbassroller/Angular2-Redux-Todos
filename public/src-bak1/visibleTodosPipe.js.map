{"version":3,"sources":["src/visibleTodosPipe.ts"],"names":["VisibleTodosPipe","VisibleTodosPipe.constructor","VisibleTodosPipe.transform","VisibleTodosPipe.getVisibleTodos"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;YAIA;gBAAAA;gBAyBAC,CAACA;gBArBCD,oCAASA,GAATA,UAAUA,KAAKA,EAAEA,IAAIA;oBACnBE,EAAEA,CAACA,CAACA,cAAOA,CAACA,IAAIA,CAACA,IAAIA,IAAIA,CAACA,MAAMA,IAAIA,CAACA,CAACA,CAACA,CAACA;wBACtCA,MAAMA,IAAIA,0BAAaA,CAACA,yCAAyCA,CAACA,CAACA;oBACrEA,CAACA;oBACDA,EAAEA,CAACA,CAACA,gBAASA,CAACA,KAAKA,CAACA,IAAIA,CAACA,cAAOA,CAACA,KAAKA,CAACA,CAACA,CAAAA,CAACA;wBACvCA,MAAMA,IAAIA,0BAAaA,CAACA,8CAA8CA,CAACA,CAACA;oBAC1EA,CAACA;oBACDA,MAAMA,CAACA,IAAIA,CAACA,eAAeA,CAACA,KAAKA,EAAEA,IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAC9CA,CAACA;gBAEOF,0CAAeA,GAAvBA,UAAwBA,KAAKA,EAAEA,MAAMA;oBACnCG,MAAMA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA;wBACfA,KAAKA,aAAaA;4BAChBA,MAAMA,CAACA,KAAKA,CAACA,MAAMA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,CAACA,CAACA,CAACA,SAASA,EAAZA,CAAYA,CAACA,CAACA;wBACzCA,KAAKA,gBAAgBA;4BACnBA,MAAMA,CAACA,KAAKA,CAACA,MAAMA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,CAACA,CAACA,SAASA,EAAXA,CAAWA,CAACA,CAACA;wBACxCA,KAAKA,UAAUA,CAACA;wBAChBA;4BACEA,MAAMA,CAACA,KAAKA,CAACA;oBACjBA,CAACA;gBACHA,CAACA;;gBAxBHH;oBAACA,WAAIA,CAACA;wBACJA,IAAIA,EAAEA,cAAcA;qBACrBA,CAACA;;qCAuBDA;gBAADA,uBAACA;YAADA,CAzBA,AAyBCA,IAAA;YAzBD,+CAyBC,CAAA","file":"src/visibleTodosPipe.js","sourcesContent":["import {isBlank, isPresent, isArray} from 'angular2/src/facade/lang';\nimport {BaseException} from 'angular2/src/facade/exceptions';\nimport {Pipe, PipeTransform} from 'angular2/core';\n\n@Pipe({\n  name: 'visibleTodos'\n})\nexport class VisibleTodosPipe implements PipeTransform {\n  transform(todos, args){ \n    if (isBlank(args) || args.length == 0) {\n      throw new BaseException('VisibleTodos pipe requires one argument');\n    }\n    if (isPresent(todos) && !isArray(todos)){\n      throw new BaseException('VisibleTodos pipe requires an Array as input');\n    }\n    return this.getVisibleTodos(todos, args[0]);\n  }\n  \n  private getVisibleTodos(todos, filter){\n    switch (filter) {\n      case 'SHOW_ACTIVE':\n        return todos.filter(t => !t.completed);\n      case 'SHOW_COMPLETED':\n        return todos.filter(t => t.completed);\n      case 'SHOW_ALL':\n      default:\n        return todos;\n    }\n  };\n}"],"sourceRoot":"/source/"}